<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.gradationback.mapper.UserMapper">

    <!--  회원가입  -->
    <insert id="insert" parameterType="UserVO">
        INSERT INTO TBL_USER (ID, USER_NAME, USER_EMAIL, USER_IDENTIFICATION, USER_PASSWORD, USER_PHONE, USER_NICKNAME, USER_SNS_OK, USER_MAIL_OK, USER_AGREEMENT_OK)
        VALUES ( SEQ_USER.NEXTVAL, #{userName}, #{userEmail}, #{userIdentification}, #{userPassword},
                #{userPhone}, #{userNickName}, #{userSnsOk}, #{userMailOk}, #{userAgreement} )
    </insert>

    <!--  전체 회원 정보 조회  -->
    <select id="selectAllUser" resultType="UserVO">
        SELECT ID, USER_IMG_NAME, USER_IMG_PATH, USER_NAME, USER_EMAIL, USER_IDENTIFICATION, USER_PASSWORD,
               USER_PHONE, USER_NICKNAME, USER_ADDRESS, USER_DETAIL_ADDRESS, USER_POSTAL_CODE, USER_SNS_OK,
               USER_MAIL_OK, USER_AGREEMENT_OK, USER_INTRODUCE, USER_INSTAGRAM, USER_YOUTUBE, USER_BLOG,
               USER_KAKAO, USER_GOOGLE, USER_NAVER, USER_ADMIN_OK, USER_BAN_OK, MAJOR_ID, USER_MAJOR_IMG_NAME, USER_MAJOR_IMG_PATH,
               USER_WRITER_STATUS, USER_UNIVERSITY_STATUS, USER_ART_CATEGORY, USER_BACKGROUND_IMG_NAME, USER_BACKGROUND_IMG_PATH
        FROM TBL_USER
    </select>

    <!--  단일 회원 정보 조회  -->
    <select id="selectUser" parameterType="String" resultType="UserVO">
        SELECT ID, USER_IMG_NAME, USER_IMG_PATH, USER_NAME, USER_EMAIL, USER_IDENTIFICATION, USER_PASSWORD,
               USER_PHONE, USER_NICKNAME, USER_ADDRESS, USER_DETAIL_ADDRESS, USER_POSTAL_CODE, USER_SNS_OK,
               USER_MAIL_OK, USER_AGREEMENT_OK, USER_INTRODUCE, USER_INSTAGRAM, USER_YOUTUBE, USER_BLOG,
               USER_KAKAO, USER_GOOGLE, USER_NAVER, USER_ADMIN_OK, USER_BAN_OK, MAJOR_ID, USER_MAJOR_IMG_NAME, USER_MAJOR_IMG_PATH,
               USER_WRITER_STATUS, USER_UNIVERSITY_STATUS, USER_ART_CATEGORY, USER_BACKGROUND_IMG_NAME, USER_BACKGROUND_IMG_PATH
        FROM TBL_USER
        WHERE USER_EMAIL = #{userEmail}
    </select>

    <!--  아이디 중복 체크  -->
    <select id="checkId" parameterType="String" resultType="int">
        SELECT COUNT(ID)
        FROM TBL_USER
        WHERE USER_IDENTIFICATION = #{userIdentification}
    </select>

    <!--  이메일 중복 체크  -->
    <select id="checkEmail" parameterType="String" resultType="int">
        SELECT COUNT(ID)
        FROM TBL_USER
        WHERE USER_EMAIL = #{userEmail}
    </select>

    <!--  아이디 찾기 (이메일, 이름)  -->
    <select id="selectIdByEmailAndName" parameterType="UserVO" resultType="String">
        SELECT USER_IDENTIFICATION
        FROM TBL_USER
        WHERE USER_EMAIL = #{userEmail} AND USER_NAME = #{userName}
    </select>

    <!--  비밀번호 찾기 (아이디, 이름, 비밀번호)  -->
    <select id="selectByIdAndEmailAndName" parameterType="UserVO" resultType="int">
        SELECT COUNT(ID)
        FROM TBL_USER
        WHERE USER_IDENTIFICATION = #{userIdentification} AND USER_EMAIL = #{userEmail} AND USER_NAME = #{userName}
    </select>

    <!--  로그인  -->
    <select id="login" parameterType="UserVO" resultType="String">
        SELECT USER_EMAIL
        FROM TBL_USER
        WHERE USER_IDENTIFICATION = #{userIdentification} AND USER_PASSWORD = #{userPassword}
    </select>

    <!--  비밀번호 변경  -->
    <update id="updatePassword" parameterType="UserVO">
        UPDATE TBL_USER
        SET USER_PASSWORD = #{userPassword}
        WHERE USER_IDENTIFICATION = #{userIdentification}
    </update>

    <!--  회원 정보 수정  -->
    <update id="updateUser" parameterType="UserVO">
        UPDATE TBL_USER
        SET USER_NICKNAME = #{userNickName}, USER_NAME = #{userName},
            USER_PHONE = #{userPhone}, USER_EMAIL = #{userEmail}, USER_ADDRESS = #{userAddress}, USER_DETAIL_ADDRESS = #{userDetailAddress}
        WHERE USER_IDENTIFICATION = #{userIdentification}
    </update>

    <!--  비밀번호 조회 (이메일로)  -->
    <select id="selectPassword" parameterType="String" resultType="String">
        SELECT USER_PASSWORD
        FROM TBL_USER
        WHERE USER_EMAIL = #{userEmail}
    </select>

    <!--  회원 탈퇴  -->
    <delete id="deleteUser" parameterType="String">
        DELETE TBL_USER
		WHERE USER_EMAIL = #{userEmail}
    </delete>

    <!--  이메일 찾기  -->
    <select id="selectEmailById" parameterType="Long" resultType="String">
        SELECT USER_EMAIL FROM TBL_USER WHERE ID = #{id}
    </select>

</mapper>